apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dotnet-env.fullname" . }}
  labels:
{{ include "dotnet-env.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "dotnet-env.serviceAccountName" . }}
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
          envFrom:
          {{- if .Values.configMap.enabled }}
            - configMapRef:
                name: {{ .Values.configMap.name }}
          {{- end }}
          {{- if .Values.secret.create }}
            - secretRef:
                name: {{ .Values.secret.name }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
